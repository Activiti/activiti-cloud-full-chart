# Default values for activiti-cloud-full-example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## i.e Jx environment
# expose: 
#   config:
#     domain: &domain "1.2.3.4.nip.io"
#     http: &http true

global:
  ## Configure pull secrets for all deployments
  registryPullSecrets: []

  # Use Yaml formatted string to add extra environment properties to all deployments, i.e.
  extraEnv: |
    # - name: SERVER_USEFORWARDHEADERS
    #   value: "true"
    # - name: SERVER_TOMCAT_INTERNALPROXIES
    #   value: ".*"
    # - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
    #   value: "*"

  keycloak:
    ## Configure Activiti Keycloak host template, i.e. "activiti-keycloak.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: '{{ template "common.gateway-host" . }}'

    ## Set full url to configure external Keycloak, https://my.keycloak.com/auth
    # if not set, keycloak deployment is automatically exposed on gaetway host, i.e. http://activiti-cloud-gateway.REPLACEME/auth
    url: ""

    ## Configure Keycloak realm
    realm: "activiti"
    resource: "activiti"
    client: "activiti"

    ## Use Yaml formatted string to add keycloak properties to deployments
    extraEnv: |
      # - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
      #   value: "false" 

  gateway:
    ## Set to configure single domain name for all services, i.e. "activiti-cloud-gateway.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: 'activiti-cloud-gateway.{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}'

    ## Set to false enables HTTPS configuration on all urls 
    http: "true"

    ## Set to enable automatic TLS for ingress if https is enabled
    tlsacme: "false"

    ## Set to configure gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    #  helm upgrade activiti . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: "REPLACEME"

    ## Configure global annotations for all service ingresses, i.e. 
    annotations: 
      certmanager.k8s.io/issuer: letsencrypt-prod

    ## Or simply enable templated domain host coniguration in Jx environment
    # host: "activiti-cloud-gateway.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    # domain: *domain ## Sync with Jx expose controller domain conig 
    # http: *http ## Sync with Jx expose controller http conig
    # tlsacme: *tlsacme ## Sync with Jx expose controller tlsacme conig


activiti-cloud-modeling:
  enabled: true
  service:
    name: activiti-cloud-modeling
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
    frontend:
      image:
        repository: activiti/activiti-modeling-app
        tag: 7.0.0.SR1
        pullPolicy: Always
      annotations: {}
    backend:
      image:
        repository: activiti/activiti-cloud-modeling
        tag: 7.0.0.SR1
        pullPolicy: Always
      annotations: {}

runtime-bundle:
  enabled: true
  service: 
    name: rb-my-app
  image:
    pullPolicy: Always
    repository: activiti/example-runtime-bundle
    tag: 7.0.0.SR1
activiti-cloud-query:
  service: 
    name: query
  image:
    pullPolicy: Always

activiti-cloud-connector:
  enabled: true
  service: 
    name: example-cloud-connector
  image:
    pullPolicy: Always
    repository: activiti/example-cloud-connector
    tag: 7.0.0.SR1

activiti-cloud-notifications-graphql:
  enabled: true
  service: 
    name: activiti-cloud-notifications
  image:
    pullPolicy: Always
    repository: activiti/activiti-cloud-notifications-graphql
    tag: 7.0.0.SR1

activiti-cloud-audit:
  service: 
    name: audit
  image:
    pullPolicy: Always
    repository: activiti/activiti-cloud-audit
    tag: 7.0.0.SR1

activiti-keycloak:
  enabled: true
  ingress:
    enabled: true
  keycloak:
    enabled: true
    keycloak:
      preStartScript: |
        /opt/jboss/keycloak/bin/add-user.sh -u admin -p admin
        /opt/jboss/keycloak/bin/add-user-keycloak.sh -r master -u admin -p admin
        cp /realm/activiti-realm.json .
        sed -i 's/placeholder.com/*/g' activiti-realm.json
  
activiti-cloud-gateway:
  service:
    name: activiti-cloud-gateway
  image:
    repository: activiti/activiti-cloud-gateway
    tag: 7.0.0.SR1
    pullPolicy: IfNotPresent
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
postgres:
  enabled: true
  postgresqlPassword: password
  resources:
    requests:
      cpu: 350m
      memory: 512Mi

rabbitmq:
  enabled: true
  service:
    clusterIP: None
  persistentVolume:
    enabled: true
  rabbitmqUsername: "guest"
  rabbitmqPassword: "guest"
  rabbitmqErlangCookie: 124567890abcdefghijklmnopqrstuv
  rabbitmqSTOMPPlugin:
    enabled: true
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 350m
      memory: 512Mi
  rbac:
    create: true
  replicaCount: 1
  ingress:
    enabled: false
    #    hostName: "rabbitmq.jx-staging.X.X.X.X.nip.io"
    path: /
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
